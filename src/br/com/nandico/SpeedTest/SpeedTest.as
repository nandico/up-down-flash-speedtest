package br.com.nandico.SpeedTest{	import flash.display.MovieClip;	import flash.text.TextField;		import br.com.nandico.SpeedTest.ConfigLoader;	import br.com.nandico.SpeedTest.ConfigLoaderEvent;	import br.com.nandico.SpeedTest.DownstreamEvent;	import br.com.nandico.SpeedTest.DownstreamTest;		public class SpeedTest extends MovieClip	{		private var configModel:ConfigModel;		public var outputText:TextField;		private var downstreamCalc:DownstreamCalc;		public function SpeedTest()		{			ConfigLoader.addEventListener(ConfigLoaderEvent.CONFIG_LOADED, configLoadedHandler);			ConfigLoader.loadConfig();		}		private function configLoadedHandler(event:ConfigLoaderEvent):void		{			configModel = event.result;			DownstreamTest.addEventListener(DownstreamEvent.DOWNSTREAM_STARTED, handleDownstreamStart);			DownstreamTest.addEventListener(DownstreamEvent.DOWNSTREAM_PACKAGE_FINISHED, handleDownstreamPackageFinished);			DownstreamTest.addEventListener(DownstreamEvent.DOWNSTREAM_FINISHED, handleDownstreamFinished);			DownstreamTest.addEventListener(DownstreamEvent.DOWNSTREAM_ERROR, handleDownstreamFinished);			DownstreamTest.addEventListener(DownstreamEvent.DOWNSTREAM_UPDATE, handleDownstreamUpdate);			DownstreamTest.startTest(configModel);		}				private function handleDownstreamStart(event:DownstreamEvent):void		{			trace("Downstream package started.");						downstreamCalc = new DownstreamCalc(DownstreamTest.packages);		}				private function handleDownstreamPackageFinished(event:DownstreamEvent):void		{			trace("Downstream package finished.");		}		private function handleDownstreamFinished(event:DownstreamEvent):void		{			trace("Downstream finished.");						trace( downstreamCalc.getStatus() );		}		private function handleDownstreamError(event:DownstreamEvent):void		{			trace("Downstream error.");		}		private function handleDownstreamUpdate(event:DownstreamEvent):void		{			trace("Downstream update.");						trace( downstreamCalc.getStatus() );		}		/*		private function tracePackageInfo():void		{			var myPackage:DownstreamPackageModel;			var displayText:String = "";			for (var i:uint = 0; i < DownstreamTest.packages.length; i ++)			{				myPackage = DownstreamTest.packages[i];				if (myPackage.status == DownstreamPackageModel.STATUS_IDLE)				{					return;				}				trace("Id: " + i);				trace("Percent: " + myPackage.percentLoaded);				trace("Birthdate: " + myPackage.birthDate);				trace("Live:" + ((new Date()).valueOf() - myPackage.birthDate.valueOf()));				trace("Bytestotal:" + myPackage.bytesTotal);				trace("Bytesloaded:" + myPackage.bytesLoaded);			}		}		private function traceCalculation():void		{			var myPackage:DownstreamPackageModel;			var totalBytes:Number = 0;			var loadedBytes:Number = 0;			var timeAmount:Number = 0;			for (var i:uint = 0; i < DownstreamTest.packages.length; i ++)			{				myPackage = DownstreamTest.packages[i];				totalBytes +=  myPackage.bytesTotal;				loadedBytes +=  myPackage.bytesLoaded;				timeAmount +=  myPackage.deathDate.valueOf() - myPackage.birthDate.valueOf();			}			trace("------------------");			trace("------------------");			trace("------------------");			trace("Total Bytes: " + totalBytes);			trace("Loaded bytes: " + loadedBytes);			trace("Total miliseconds: " + timeAmount);			trace("Total seconds: " + timeAmount / 1000);			trace("Speed MB: " + ( totalBytes / 1024 / 1024 ) / ( timeAmount / 1000 ) );			trace("Speed KB: " + ( totalBytes / 1024 ) / ( timeAmount / 1000 ) );		}		*/	}}